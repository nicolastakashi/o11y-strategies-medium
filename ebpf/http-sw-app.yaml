---
apiVersion: v1
kind: Service
metadata:
  name: deathstar
  labels:
    app.kubernetes.io/name: deathstar
spec:
  type: ClusterIP
  ports:
    - port: 80
  selector:
    org: empire
    class: deathstar
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deathstar
  labels:
    app.kubernetes.io/name: deathstar
spec:
  replicas: 2
  selector:
    matchLabels:
      org: empire
      class: deathstar
  template:
    metadata:
      annotations:
        policy.cilium.io/proxy-visibility: "<Egress/53/UDP/DNS>,<Egress/80/TCP/HTTP>,<Ingress/80/TCP/HTTP>"
      labels:
        org: empire
        class: deathstar
        app.kubernetes.io/name: deathstar
    spec:
      containers:
        - name: deathstar
          image: docker.io/cilium/starwars
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tiefighter-deployment
  labels:
    org: empire
    class: tiefighter
    app.kubernetes.io/name: tiefighter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tiefighter
  template:
    metadata:
      labels:
        org: empire
        class: tiefighter
        app.kubernetes.io/name: tiefighter
    spec:
      containers:
        - name: tiefighter
          image: nicolaka/netshoot
          command: ["/bin/sh", "-c"]
          args:
            - "while true; do curl -s -XPOST deathstar.default.svc.cluster.local/v1/request-landing; done"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xwing-deployment
  labels:
    app.kubernetes.io/name: xwing
    org: alliance
    class: xwing
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: xwing
  template:
    metadata:
      labels:
        app.kubernetes.io/name: xwing
        org: alliance
        class: xwing
    spec:
      containers:
        - name: xwing
          image: nicolaka/netshoot
          command: ["/bin/sh", "-c"]
          args:
            - "while true; do curl -s -XPOST deathstar.default.svc.cluster.local/v1/request-landing; done"
